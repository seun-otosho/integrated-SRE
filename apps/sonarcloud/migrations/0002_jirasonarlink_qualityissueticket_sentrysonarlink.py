# Generated by Django 5.2.6 on 2025-09-17 15:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("jira", "0001_initial"),
        ("sentry", "0003_sentryproject_product"),
        ("sonarcloud", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="JiraSonarLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "link_type",
                    models.CharField(
                        choices=[
                            ("manual", "Manually Created"),
                            ("auto", "Automatically Detected"),
                            ("imported", "Imported/Discovered"),
                        ],
                        default="manual",
                        max_length=20,
                    ),
                ),
                (
                    "auto_create_security_tickets",
                    models.BooleanField(
                        default=False,
                        help_text="Automatically create JIRA tickets for security vulnerabilities",
                    ),
                ),
                (
                    "auto_create_debt_tickets",
                    models.BooleanField(
                        default=False,
                        help_text="Automatically create JIRA tickets for technical debt above threshold",
                    ),
                ),
                (
                    "auto_create_coverage_tickets",
                    models.BooleanField(
                        default=False,
                        help_text="Automatically create JIRA tickets when coverage drops significantly",
                    ),
                ),
                (
                    "security_severity_threshold",
                    models.CharField(
                        choices=[
                            ("BLOCKER", "Blocker"),
                            ("CRITICAL", "Critical"),
                            ("MAJOR", "Major"),
                            ("MINOR", "Minor"),
                            ("INFO", "Info"),
                        ],
                        default="MAJOR",
                        help_text="Minimum severity for auto-creating security tickets",
                        max_length=20,
                    ),
                ),
                (
                    "debt_threshold_hours",
                    models.PositiveIntegerField(
                        default=8,
                        help_text="Create tickets for debt above this threshold (hours)",
                    ),
                ),
                (
                    "coverage_drop_threshold",
                    models.FloatField(
                        default=5.0,
                        help_text="Create tickets when coverage drops by this percentage",
                    ),
                ),
                ("default_issue_type", models.CharField(default="Task", max_length=50)),
                ("default_priority", models.CharField(default="Medium", max_length=50)),
                ("security_issue_type", models.CharField(default="Bug", max_length=50)),
                ("security_priority", models.CharField(default="High", max_length=50)),
                ("creation_notes", models.TextField(blank=True)),
                (
                    "last_ticket_creation_sync",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("tickets_created_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "jira_project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="jira.jiraproject",
                    ),
                ),
                (
                    "sonarcloud_project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sonarcloud.sonarcloudproject",
                    ),
                ),
            ],
            options={
                "verbose_name": "JIRA-SonarCloud Link",
                "verbose_name_plural": "JIRA-SonarCloud Links",
                "db_table": "jira_sonar_links",
                "unique_together": {("jira_project", "sonarcloud_project")},
            },
        ),
        migrations.CreateModel(
            name="QualityIssueTicket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "creation_reason",
                    models.CharField(
                        choices=[
                            ("security", "Security Vulnerability"),
                            ("debt", "Technical Debt"),
                            ("coverage", "Coverage Drop"),
                            ("manual", "Manual Creation"),
                        ],
                        max_length=50,
                    ),
                ),
                ("auto_created", models.BooleanField(default=False)),
                (
                    "sync_enabled",
                    models.BooleanField(
                        default=True,
                        help_text="Keep ticket in sync with SonarCloud issue",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "jira_issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quality_issues",
                        to="jira.jiraissue",
                    ),
                ),
                (
                    "jira_sonar_link",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sonarcloud.jirasonarlink",
                    ),
                ),
                (
                    "sonarcloud_issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jira_tickets",
                        to="sonarcloud.codeissue",
                    ),
                ),
            ],
            options={
                "verbose_name": "Quality Issue Ticket",
                "verbose_name_plural": "Quality Issue Tickets",
                "db_table": "quality_issue_tickets",
                "unique_together": {("sonarcloud_issue", "jira_issue")},
            },
        ),
        migrations.CreateModel(
            name="SentrySonarLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "link_type",
                    models.CharField(
                        choices=[
                            ("manual", "Manually Created"),
                            ("auto", "Automatically Detected"),
                            ("imported", "Imported/Discovered"),
                        ],
                        default="manual",
                        max_length=20,
                    ),
                ),
                (
                    "block_releases_on_quality_gate",
                    models.BooleanField(
                        default=False,
                        help_text="Block Sentry releases when SonarCloud quality gate fails",
                    ),
                ),
                (
                    "minimum_coverage_threshold",
                    models.FloatField(
                        blank=True,
                        help_text="Minimum test coverage required for releases (percentage)",
                        null=True,
                    ),
                ),
                (
                    "maximum_debt_threshold",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum technical debt allowed for releases (minutes)",
                        null=True,
                    ),
                ),
                (
                    "creation_notes",
                    models.TextField(
                        blank=True, help_text="Notes about why this link was created"
                    ),
                ),
                ("last_quality_sync", models.DateTimeField(blank=True, null=True)),
                ("quality_sync_errors", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sentry_project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sentry.sentryproject",
                    ),
                ),
                (
                    "sonarcloud_project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sonarcloud.sonarcloudproject",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sentry-SonarCloud Link",
                "verbose_name_plural": "Sentry-SonarCloud Links",
                "db_table": "sentry_sonar_links",
                "unique_together": {("sentry_project", "sonarcloud_project")},
            },
        ),
    ]
