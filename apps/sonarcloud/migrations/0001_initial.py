# Generated by Django 5.2.6 on 2025-09-17 14:56

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("products", "0002_alter_product_options_product_description_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="SonarCloudOrganization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Display name for this SonarCloud organization",
                        max_length=200,
                    ),
                ),
                (
                    "organization_key",
                    models.CharField(
                        help_text="SonarCloud organization key (from URL)",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "api_token",
                    models.CharField(help_text="SonarCloud API token", max_length=200),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "url",
                    models.URLField(
                        blank=True, help_text="Organization URL on SonarCloud"
                    ),
                ),
                ("avatar_url", models.URLField(blank=True)),
                (
                    "sync_enabled",
                    models.BooleanField(
                        default=True, help_text="Enable automatic syncing"
                    ),
                ),
                (
                    "sync_interval_hours",
                    models.PositiveIntegerField(
                        default=12, help_text="Hours between syncs"
                    ),
                ),
                ("last_sync", models.DateTimeField(blank=True, null=True)),
                (
                    "connection_status",
                    models.CharField(
                        choices=[
                            ("unknown", "Unknown"),
                            ("connected", "Connected"),
                            ("failed", "Connection Failed"),
                            ("unauthorized", "Unauthorized"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                ("last_connection_test", models.DateTimeField(blank=True, null=True)),
                (
                    "connection_error",
                    models.TextField(
                        blank=True, help_text="Last connection error message"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "SonarCloud Organization",
                "verbose_name_plural": "SonarCloud Organizations",
                "db_table": "sonarcloud_organizations",
            },
        ),
        migrations.CreateModel(
            name="SonarCloudProject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "project_key",
                    models.CharField(
                        help_text="SonarCloud project key", max_length=200
                    ),
                ),
                ("name", models.CharField(max_length=300)),
                ("description", models.TextField(blank=True)),
                ("visibility", models.CharField(default="public", max_length=20)),
                (
                    "language",
                    models.CharField(
                        blank=True,
                        help_text="Primary programming language",
                        max_length=50,
                    ),
                ),
                (
                    "main_branch",
                    models.CharField(
                        default="main", help_text="Main branch name", max_length=100
                    ),
                ),
                (
                    "quality_gate_status",
                    models.CharField(
                        choices=[
                            ("OK", "Passed"),
                            ("ERROR", "Failed"),
                            ("WARN", "Warning"),
                            ("NONE", "No Quality Gate"),
                        ],
                        default="NONE",
                        max_length=20,
                    ),
                ),
                (
                    "reliability_rating",
                    models.CharField(
                        blank=True, help_text="A (best) to E (worst)", max_length=1
                    ),
                ),
                (
                    "security_rating",
                    models.CharField(
                        blank=True, help_text="A (best) to E (worst)", max_length=1
                    ),
                ),
                (
                    "maintainability_rating",
                    models.CharField(
                        blank=True, help_text="A (best) to E (worst)", max_length=1
                    ),
                ),
                ("lines_of_code", models.PositiveIntegerField(default=0)),
                (
                    "coverage",
                    models.FloatField(
                        blank=True, help_text="Test coverage percentage", null=True
                    ),
                ),
                (
                    "duplication",
                    models.FloatField(
                        blank=True, help_text="Code duplication percentage", null=True
                    ),
                ),
                (
                    "technical_debt",
                    models.PositiveIntegerField(
                        default=0, help_text="Technical debt in minutes"
                    ),
                ),
                ("bugs", models.PositiveIntegerField(default=0)),
                ("vulnerabilities", models.PositiveIntegerField(default=0)),
                ("security_hotspots", models.PositiveIntegerField(default=0)),
                ("code_smells", models.PositiveIntegerField(default=0)),
                ("sync_enabled", models.BooleanField(default=True)),
                (
                    "sync_measures",
                    models.BooleanField(
                        default=True, help_text="Sync quality measures"
                    ),
                ),
                (
                    "sync_issues",
                    models.BooleanField(default=True, help_text="Sync code issues"),
                ),
                ("last_analysis", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_measure_sync", models.DateTimeField(blank=True, null=True)),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        help_text="Link this SonarCloud project to a business product",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sonarcloud_projects",
                        to="products.product",
                    ),
                ),
                (
                    "sonarcloud_organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to="sonarcloud.sonarcloudorganization",
                    ),
                ),
            ],
            options={
                "verbose_name": "SonarCloud Project",
                "verbose_name_plural": "SonarCloud Projects",
                "db_table": "sonarcloud_projects",
                "ordering": ["name"],
                "unique_together": {("sonarcloud_organization", "project_key")},
            },
        ),
        migrations.CreateModel(
            name="CodeIssue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sonarcloud_key",
                    models.CharField(
                        help_text="SonarCloud issue key", max_length=200, unique=True
                    ),
                ),
                (
                    "rule",
                    models.CharField(
                        help_text="SonarCloud rule identifier", max_length=200
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("BLOCKER", "Blocker"),
                            ("CRITICAL", "Critical"),
                            ("MAJOR", "Major"),
                            ("MINOR", "Minor"),
                            ("INFO", "Info"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("BUG", "Bug"),
                            ("VULNERABILITY", "Vulnerability"),
                            ("CODE_SMELL", "Code Smell"),
                            ("SECURITY_HOTSPOT", "Security Hotspot"),
                        ],
                        max_length=20,
                    ),
                ),
                ("message", models.TextField(help_text="Issue description")),
                ("component", models.CharField(help_text="File path", max_length=500)),
                (
                    "line",
                    models.PositiveIntegerField(
                        blank=True, help_text="Line number", null=True
                    ),
                ),
                ("status", models.CharField(default="OPEN", max_length=20)),
                ("resolution", models.CharField(blank=True, max_length=20)),
                (
                    "effort",
                    models.CharField(
                        blank=True,
                        help_text="Effort to fix (e.g., '5min')",
                        max_length=20,
                    ),
                ),
                (
                    "debt",
                    models.PositiveIntegerField(
                        default=0, help_text="Technical debt in minutes"
                    ),
                ),
                ("creation_date", models.DateTimeField()),
                ("update_date", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="issues",
                        to="sonarcloud.sonarcloudproject",
                    ),
                ),
            ],
            options={
                "verbose_name": "Code Issue",
                "verbose_name_plural": "Code Issues",
                "db_table": "sonarcloud_issues",
                "ordering": ["-creation_date"],
            },
        ),
        migrations.CreateModel(
            name="SonarSyncLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sync_type",
                    models.CharField(
                        choices=[
                            ("full", "Full Sync"),
                            ("projects", "Projects Only"),
                            ("measures", "Measures Only"),
                            ("issues", "Issues Only"),
                        ],
                        default="full",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("started", "Started"),
                            ("success", "Success"),
                            ("failed", "Failed"),
                            ("partial", "Partial Success"),
                        ],
                        default="started",
                        max_length=20,
                    ),
                ),
                ("projects_synced", models.PositiveIntegerField(default=0)),
                ("measures_synced", models.PositiveIntegerField(default=0)),
                ("issues_synced", models.PositiveIntegerField(default=0)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("error_details", models.JSONField(blank=True, default=dict)),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("duration_seconds", models.FloatField(blank=True, null=True)),
                (
                    "sonarcloud_organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sync_logs",
                        to="sonarcloud.sonarcloudorganization",
                    ),
                ),
            ],
            options={
                "verbose_name": "SonarCloud Sync Log",
                "verbose_name_plural": "SonarCloud Sync Logs",
                "db_table": "sonarcloud_sync_logs",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="QualityMeasurement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "analysis_date",
                    models.DateTimeField(help_text="When this analysis was performed"),
                ),
                ("branch", models.CharField(default="main", max_length=100)),
                ("quality_gate_status", models.CharField(max_length=20)),
                ("reliability_rating", models.CharField(blank=True, max_length=1)),
                ("security_rating", models.CharField(blank=True, max_length=1)),
                ("maintainability_rating", models.CharField(blank=True, max_length=1)),
                ("lines_of_code", models.PositiveIntegerField(default=0)),
                ("coverage", models.FloatField(blank=True, null=True)),
                ("duplication", models.FloatField(blank=True, null=True)),
                ("technical_debt", models.PositiveIntegerField(default=0)),
                ("bugs", models.PositiveIntegerField(default=0)),
                ("vulnerabilities", models.PositiveIntegerField(default=0)),
                ("security_hotspots", models.PositiveIntegerField(default=0)),
                ("code_smells", models.PositiveIntegerField(default=0)),
                ("complexity", models.PositiveIntegerField(default=0)),
                ("cognitive_complexity", models.PositiveIntegerField(default=0)),
                ("classes", models.PositiveIntegerField(default=0)),
                ("functions", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="measurements",
                        to="sonarcloud.sonarcloudproject",
                    ),
                ),
            ],
            options={
                "verbose_name": "Quality Measurement",
                "verbose_name_plural": "Quality Measurements",
                "db_table": "sonarcloud_measurements",
                "ordering": ["-analysis_date"],
                "unique_together": {("project", "analysis_date", "branch")},
            },
        ),
    ]
