# Generated by Django 5.2.6 on 2025-09-18 06:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("products", "0002_alter_product_options_product_description_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Dashboard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "dashboard_type",
                    models.CharField(
                        choices=[
                            ("executive", "Executive Overview"),
                            ("product", "Product Health"),
                            ("environment", "Environment Status"),
                            ("team", "Team Performance"),
                            ("quality", "Quality Metrics"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "is_public",
                    models.BooleanField(default=True, help_text="Visible to all users"),
                ),
                (
                    "config",
                    models.JSONField(
                        default=dict,
                        help_text="Dashboard configuration and widget settings",
                    ),
                ),
                (
                    "refresh_interval",
                    models.PositiveIntegerField(
                        default=300, help_text="Auto-refresh interval in seconds"
                    ),
                ),
                (
                    "default_environment_filter",
                    models.CharField(
                        blank=True,
                        help_text="Default environment filter (production, staging, etc.)",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "allowed_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="accessible_dashboards",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_dashboards",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "default_product_filter",
                    models.ForeignKey(
                        blank=True,
                        help_text="Default product filter for this dashboard",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dashboard",
                "verbose_name_plural": "Dashboards",
                "db_table": "dashboards",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="DashboardWidget",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "widget_type",
                    models.CharField(
                        choices=[
                            ("metric_card", "Metric Card"),
                            ("chart_line", "Line Chart"),
                            ("chart_bar", "Bar Chart"),
                            ("chart_pie", "Pie Chart"),
                            ("table", "Data Table"),
                            ("heatmap", "Heatmap"),
                            ("status_grid", "Status Grid"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("row", models.PositiveIntegerField(default=0)),
                ("column", models.PositiveIntegerField(default=0)),
                (
                    "width",
                    models.PositiveIntegerField(
                        default=6, help_text="Width in grid columns (1-12)"
                    ),
                ),
                (
                    "height",
                    models.PositiveIntegerField(
                        default=4, help_text="Height in grid rows"
                    ),
                ),
                (
                    "data_source",
                    models.CharField(
                        help_text="Source of data (sentry, jira, sonarcloud, combined)",
                        max_length=100,
                    ),
                ),
                (
                    "query_config",
                    models.JSONField(
                        default=dict, help_text="Query configuration for data retrieval"
                    ),
                ),
                (
                    "display_config",
                    models.JSONField(default=dict, help_text="Widget display settings"),
                ),
                ("auto_refresh", models.BooleanField(default=True)),
                (
                    "cache_duration",
                    models.PositiveIntegerField(
                        default=60, help_text="Cache duration in seconds"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "dashboard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="widgets",
                        to="dashboards.dashboard",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dashboard Widget",
                "verbose_name_plural": "Dashboard Widgets",
                "db_table": "dashboard_widgets",
                "ordering": ["dashboard", "row", "column"],
            },
        ),
    ]
