# Generated by Django 5.2.6 on 2025-09-16 10:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="SentryOrganization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sentry_id", models.CharField(max_length=100, unique=True)),
                ("slug", models.CharField(max_length=100, unique=True)),
                ("name", models.CharField(max_length=200)),
                ("avatar_url", models.URLField(blank=True, null=True)),
                ("date_created", models.DateTimeField()),
                (
                    "api_token",
                    models.CharField(help_text="Sentry API token", max_length=200),
                ),
                (
                    "api_url",
                    models.URLField(
                        default="https://sentry.io/api/0/",
                        help_text="Sentry API base URL",
                    ),
                ),
                ("sync_enabled", models.BooleanField(default=True)),
                ("sync_interval_hours", models.PositiveIntegerField(default=3)),
                ("last_sync", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Sentry Organization",
                "verbose_name_plural": "Sentry Organizations",
                "db_table": "sentry_organizations",
            },
        ),
        migrations.CreateModel(
            name="SentryProject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sentry_id", models.CharField(max_length=100)),
                ("slug", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=200)),
                ("platform", models.CharField(blank=True, max_length=50, null=True)),
                ("status", models.CharField(default="active", max_length=50)),
                ("date_created", models.DateTimeField()),
                ("first_event", models.DateTimeField(blank=True, null=True)),
                ("has_access", models.BooleanField(default=True)),
                ("is_public", models.BooleanField(default=False)),
                ("is_bookmarked", models.BooleanField(default=False)),
                ("total_issues", models.PositiveIntegerField(default=0)),
                ("resolved_issues", models.PositiveIntegerField(default=0)),
                ("unresolved_issues", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to="sentry.sentryorganization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sentry Project",
                "verbose_name_plural": "Sentry Projects",
                "db_table": "sentry_projects",
                "unique_together": {("organization", "sentry_id")},
            },
        ),
        migrations.CreateModel(
            name="SentryIssue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sentry_id", models.CharField(max_length=100)),
                ("title", models.CharField(max_length=500)),
                ("culprit", models.CharField(blank=True, max_length=500, null=True)),
                ("permalink", models.URLField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("unresolved", "Unresolved"),
                            ("resolved", "Resolved"),
                            ("ignored", "Ignored"),
                        ],
                        default="unresolved",
                        max_length=20,
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("debug", "Debug"),
                            ("info", "Info"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("fatal", "Fatal"),
                        ],
                        default="error",
                        max_length=20,
                    ),
                ),
                ("type", models.CharField(blank=True, max_length=100, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("count", models.PositiveIntegerField(default=0)),
                ("user_count", models.PositiveIntegerField(default=0)),
                ("first_seen", models.DateTimeField()),
                ("last_seen", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="issues",
                        to="sentry.sentryproject",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sentry Issue",
                "verbose_name_plural": "Sentry Issues",
                "db_table": "sentry_issues",
                "ordering": ["-last_seen"],
                "unique_together": {("project", "sentry_id")},
            },
        ),
        migrations.CreateModel(
            name="SentrySyncLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("started", "Started"),
                            ("success", "Success"),
                            ("failed", "Failed"),
                            ("partial", "Partial Success"),
                        ],
                        default="started",
                        max_length=20,
                    ),
                ),
                ("projects_synced", models.PositiveIntegerField(default=0)),
                ("issues_synced", models.PositiveIntegerField(default=0)),
                ("events_synced", models.PositiveIntegerField(default=0)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("error_details", models.JSONField(blank=True, default=dict)),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("duration_seconds", models.FloatField(blank=True, null=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sync_logs",
                        to="sentry.sentryorganization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sentry Sync Log",
                "verbose_name_plural": "Sentry Sync Logs",
                "db_table": "sentry_sync_logs",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="SentryEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sentry_id", models.CharField(max_length=100)),
                ("event_id", models.CharField(max_length=100)),
                ("message", models.TextField(blank=True, null=True)),
                ("platform", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "environment",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("release", models.CharField(blank=True, max_length=200, null=True)),
                ("user_id", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "user_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("user_ip", models.GenericIPAddressField(blank=True, null=True)),
                ("context", models.JSONField(blank=True, default=dict)),
                ("tags", models.JSONField(blank=True, default=dict)),
                ("extra", models.JSONField(blank=True, default=dict)),
                ("date_created", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="sentry.sentryissue",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sentry Event",
                "verbose_name_plural": "Sentry Events",
                "db_table": "sentry_events",
                "ordering": ["-date_created"],
                "unique_together": {("issue", "sentry_id")},
            },
        ),
    ]
