# Generated by Django 5.2.6 on 2025-09-16 13:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("products", "0002_alter_product_options_product_description_and_more"),
        ("sentry", "0003_sentryproject_product"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="JiraOrganization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Display name for this JIRA instance", max_length=200
                    ),
                ),
                (
                    "base_url",
                    models.URLField(
                        help_text="JIRA Cloud URL (e.g., https://yourcompany.atlassian.net)"
                    ),
                ),
                (
                    "username",
                    models.EmailField(
                        help_text="JIRA username (email address)", max_length=254
                    ),
                ),
                (
                    "api_token",
                    models.CharField(help_text="JIRA API token", max_length=200),
                ),
                (
                    "sync_enabled",
                    models.BooleanField(
                        default=True, help_text="Enable automatic syncing"
                    ),
                ),
                (
                    "sync_interval_hours",
                    models.PositiveIntegerField(
                        default=6, help_text="Hours between syncs"
                    ),
                ),
                ("last_sync", models.DateTimeField(blank=True, null=True)),
                (
                    "connection_status",
                    models.CharField(
                        choices=[
                            ("unknown", "Unknown"),
                            ("connected", "Connected"),
                            ("failed", "Connection Failed"),
                            ("unauthorized", "Unauthorized"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                ("last_connection_test", models.DateTimeField(blank=True, null=True)),
                (
                    "connection_error",
                    models.TextField(
                        blank=True, help_text="Last connection error message"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "JIRA Organization",
                "verbose_name_plural": "JIRA Organizations",
                "db_table": "jira_organizations",
            },
        ),
        migrations.CreateModel(
            name="JiraProject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "jira_key",
                    models.CharField(
                        help_text="JIRA project key (e.g., 'PROJ')", max_length=50
                    ),
                ),
                (
                    "jira_id",
                    models.CharField(help_text="JIRA project ID", max_length=50),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("project_type", models.CharField(blank=True, max_length=50)),
                ("lead_account_id", models.CharField(blank=True, max_length=100)),
                ("lead_display_name", models.CharField(blank=True, max_length=100)),
                ("category_name", models.CharField(blank=True, max_length=100)),
                ("self_url", models.URLField(blank=True)),
                ("avatar_url", models.URLField(blank=True)),
                ("sync_enabled", models.BooleanField(default=True)),
                (
                    "sync_issues",
                    models.BooleanField(
                        default=True, help_text="Sync issues for this project"
                    ),
                ),
                (
                    "max_issues_to_sync",
                    models.PositiveIntegerField(
                        default=1000,
                        help_text="Maximum number of issues to sync (for performance)",
                    ),
                ),
                ("total_issues", models.PositiveIntegerField(default=0)),
                ("open_issues", models.PositiveIntegerField(default=0)),
                ("in_progress_issues", models.PositiveIntegerField(default=0)),
                ("done_issues", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_issue_sync", models.DateTimeField(blank=True, null=True)),
                (
                    "jira_organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to="jira.jiraorganization",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        help_text="Link this JIRA project to a business product",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="jira_projects",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "JIRA Project",
                "verbose_name_plural": "JIRA Projects",
                "db_table": "jira_projects",
                "ordering": ["name"],
                "unique_together": {("jira_organization", "jira_key")},
            },
        ),
        migrations.CreateModel(
            name="JiraIssue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "jira_key",
                    models.CharField(
                        help_text="JIRA issue key (e.g., 'PROJ-123')", max_length=100
                    ),
                ),
                (
                    "jira_id",
                    models.CharField(help_text="JIRA issue ID", max_length=100),
                ),
                ("summary", models.CharField(max_length=500)),
                ("description", models.TextField(blank=True)),
                (
                    "issue_type",
                    models.CharField(
                        choices=[
                            ("Bug", "Bug"),
                            ("Task", "Task"),
                            ("Story", "Story"),
                            ("Epic", "Epic"),
                            ("Sub-task", "Sub-task"),
                            ("Improvement", "Improvement"),
                            ("New Feature", "New Feature"),
                        ],
                        default="Bug",
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(help_text="Current JIRA status", max_length=50),
                ),
                (
                    "status_category",
                    models.CharField(
                        choices=[
                            ("new", "To Do"),
                            ("indeterminate", "In Progress"),
                            ("done", "Done"),
                        ],
                        default="new",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("Lowest", "Lowest"),
                            ("Low", "Low"),
                            ("Medium", "Medium"),
                            ("High", "High"),
                            ("Highest", "Highest"),
                            ("Critical", "Critical"),
                        ],
                        default="Medium",
                        max_length=50,
                    ),
                ),
                ("assignee_account_id", models.CharField(blank=True, max_length=100)),
                ("assignee_display_name", models.CharField(blank=True, max_length=100)),
                ("assignee_email", models.EmailField(blank=True, max_length=254)),
                ("reporter_account_id", models.CharField(blank=True, max_length=100)),
                ("reporter_display_name", models.CharField(blank=True, max_length=100)),
                ("reporter_email", models.EmailField(blank=True, max_length=254)),
                (
                    "jira_created",
                    models.DateTimeField(help_text="When created in JIRA"),
                ),
                (
                    "jira_updated",
                    models.DateTimeField(help_text="Last updated in JIRA"),
                ),
                ("resolution_date", models.DateTimeField(blank=True, null=True)),
                ("self_url", models.URLField(blank=True)),
                (
                    "labels",
                    models.JSONField(blank=True, default=list, help_text="JIRA labels"),
                ),
                (
                    "components",
                    models.JSONField(
                        blank=True, default=list, help_text="JIRA components"
                    ),
                ),
                (
                    "fix_versions",
                    models.JSONField(
                        blank=True, default=list, help_text="Fix versions"
                    ),
                ),
                (
                    "created_from_sentry",
                    models.BooleanField(
                        default=False, help_text="Was this created from a Sentry issue?"
                    ),
                ),
                (
                    "sentry_sync_enabled",
                    models.BooleanField(
                        default=True, help_text="Enable bidirectional sync with Sentry"
                    ),
                ),
                ("last_sentry_sync", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "sentry_issue",
                    models.ForeignKey(
                        blank=True,
                        help_text="Linked Sentry issue",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="jira_issues",
                        to="sentry.sentryissue",
                    ),
                ),
                (
                    "jira_project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="issues",
                        to="jira.jiraproject",
                    ),
                ),
            ],
            options={
                "verbose_name": "JIRA Issue",
                "verbose_name_plural": "JIRA Issues",
                "db_table": "jira_issues",
                "ordering": ["-jira_updated"],
                "unique_together": {("jira_project", "jira_key")},
            },
        ),
        migrations.CreateModel(
            name="JiraSyncLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sync_type",
                    models.CharField(
                        choices=[
                            ("full", "Full Sync"),
                            ("project", "Project Sync"),
                            ("issue", "Issue Sync"),
                            ("bidirectional", "Bidirectional Sync"),
                        ],
                        default="full",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("started", "Started"),
                            ("success", "Success"),
                            ("failed", "Failed"),
                            ("partial", "Partial Success"),
                        ],
                        default="started",
                        max_length=20,
                    ),
                ),
                ("projects_synced", models.PositiveIntegerField(default=0)),
                ("issues_synced", models.PositiveIntegerField(default=0)),
                ("links_synced", models.PositiveIntegerField(default=0)),
                ("error_message", models.TextField(blank=True)),
                ("error_details", models.JSONField(blank=True, default=dict)),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("duration_seconds", models.FloatField(blank=True, null=True)),
                (
                    "jira_organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sync_logs",
                        to="jira.jiraorganization",
                    ),
                ),
            ],
            options={
                "verbose_name": "JIRA Sync Log",
                "verbose_name_plural": "JIRA Sync Logs",
                "db_table": "jira_sync_logs",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="SentryJiraLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "link_type",
                    models.CharField(
                        choices=[
                            ("manual", "Manually Created"),
                            ("auto", "Automatically Created"),
                            ("imported", "Imported/Discovered"),
                        ],
                        default="manual",
                        max_length=20,
                    ),
                ),
                (
                    "sync_sentry_to_jira",
                    models.BooleanField(
                        default=True, help_text="Sync Sentry issue changes to JIRA"
                    ),
                ),
                (
                    "sync_jira_to_sentry",
                    models.BooleanField(
                        default=True, help_text="Sync JIRA ticket changes to Sentry"
                    ),
                ),
                (
                    "creation_notes",
                    models.TextField(
                        blank=True, help_text="Notes about why this link was created"
                    ),
                ),
                (
                    "last_sync_sentry_to_jira",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "last_sync_jira_to_sentry",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("sync_errors", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by_user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this link",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "jira_issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="jira.jiraissue"
                    ),
                ),
                (
                    "sentry_issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sentry.sentryissue",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sentry-JIRA Link",
                "verbose_name_plural": "Sentry-JIRA Links",
                "db_table": "sentry_jira_links",
                "unique_together": {("sentry_issue", "jira_issue")},
            },
        ),
    ]
