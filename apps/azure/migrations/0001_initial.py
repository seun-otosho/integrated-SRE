# Generated by Django 5.2.6 on 2025-09-19 10:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("jira", "0001_initial"),
        ("products", "0002_alter_product_options_product_description_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="AzureConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Friendly name for this configuration", max_length=200
                    ),
                ),
                (
                    "config_type",
                    models.CharField(
                        choices=[
                            ("app_insights", "Application Insights"),
                            ("log_analytics", "Log Analytics Workspace"),
                            ("resource_group", "Resource Group"),
                            ("subscription", "Subscription"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "subscription_id",
                    models.CharField(help_text="Azure Subscription ID", max_length=100),
                ),
                (
                    "resource_group",
                    models.CharField(
                        blank=True, help_text="Resource Group name", max_length=100
                    ),
                ),
                (
                    "workspace_id",
                    models.CharField(
                        blank=True,
                        help_text="Log Analytics Workspace ID",
                        max_length=100,
                    ),
                ),
                (
                    "application_id",
                    models.CharField(
                        blank=True,
                        help_text="Application Insights Application ID",
                        max_length=100,
                    ),
                ),
                (
                    "tenant_id",
                    models.CharField(help_text="Azure AD Tenant ID", max_length=100),
                ),
                (
                    "client_id",
                    models.CharField(
                        help_text="Service Principal Client ID", max_length=100
                    ),
                ),
                (
                    "client_secret",
                    models.CharField(
                        help_text="Service Principal Client Secret", max_length=500
                    ),
                ),
                (
                    "environment_filter",
                    models.CharField(
                        default="production",
                        help_text="Environment to monitor (production, staging, etc.)",
                        max_length=100,
                    ),
                ),
                (
                    "resource_tags",
                    models.JSONField(
                        default=dict,
                        help_text="Resource tags to filter on (e.g., {'Environment': 'production'})",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "sync_interval_minutes",
                    models.PositiveIntegerField(
                        default=60, help_text="How often to sync data"
                    ),
                ),
                (
                    "retention_days",
                    models.PositiveIntegerField(
                        default=90, help_text="How long to keep synced data"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_sync", models.DateTimeField(blank=True, null=True)),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        help_text="Associate with specific product",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Azure Configuration",
                "verbose_name_plural": "Azure Configurations",
                "db_table": "azure_configurations",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AzureResource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "resource_id",
                    models.CharField(
                        help_text="Full Azure Resource ID", max_length=500, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "resource_type",
                    models.CharField(
                        choices=[
                            ("webapp", "Web App"),
                            ("function", "Function App"),
                            ("sql_db", "SQL Database"),
                            ("cosmos_db", "Cosmos DB"),
                            ("storage", "Storage Account"),
                            ("keyvault", "Key Vault"),
                            ("app_gateway", "Application Gateway"),
                            ("load_balancer", "Load Balancer"),
                            ("vm", "Virtual Machine"),
                            ("container", "Container Instance"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "location",
                    models.CharField(help_text="Azure region", max_length=100),
                ),
                ("resource_group", models.CharField(max_length=100)),
                ("subscription_id", models.CharField(max_length=100)),
                ("tags", models.JSONField(default=dict, help_text="Resource tags")),
                ("is_monitored", models.BooleanField(default=True)),
                (
                    "custom_metrics",
                    models.JSONField(
                        default=list, help_text="Custom metrics to collect"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_seen", models.DateTimeField(auto_now=True)),
                (
                    "configuration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resources",
                        to="azure.azureconfiguration",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        help_text="Associated product",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Azure Resource",
                "verbose_name_plural": "Azure Resources",
                "db_table": "azure_resources",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AzureMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("metric_name", models.CharField(max_length=200)),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("performance", "Performance"),
                            ("availability", "Availability"),
                            ("usage", "Resource Usage"),
                            ("cost", "Cost"),
                            ("custom", "Custom"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "namespace",
                    models.CharField(
                        help_text="Azure metric namespace", max_length=200
                    ),
                ),
                ("timestamp", models.DateTimeField(db_index=True)),
                ("value", models.FloatField()),
                (
                    "unit",
                    models.CharField(
                        help_text="Metric unit (e.g., 'Percent', 'Count')",
                        max_length=50,
                    ),
                ),
                (
                    "aggregation_type",
                    models.CharField(
                        default="Average",
                        help_text="Average, Maximum, Minimum, etc.",
                        max_length=50,
                    ),
                ),
                (
                    "time_grain",
                    models.CharField(
                        default="PT1M",
                        help_text="Time grain (e.g., PT1M for 1 minute)",
                        max_length=20,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("info", "Info"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("critical", "Critical"),
                        ],
                        default="info",
                        max_length=10,
                    ),
                ),
                ("threshold_breached", models.BooleanField(default=False)),
                (
                    "dimensions",
                    models.JSONField(default=dict, help_text="Metric dimensions"),
                ),
                (
                    "metadata",
                    models.JSONField(
                        default=dict, help_text="Additional metric metadata"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metrics",
                        to="azure.azureresource",
                    ),
                ),
            ],
            options={
                "verbose_name": "Azure Metric",
                "verbose_name_plural": "Azure Metrics",
                "db_table": "azure_metrics",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="AzureLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "log_type",
                    models.CharField(
                        help_text="Type of log (Application, System, etc.)",
                        max_length=100,
                    ),
                ),
                ("source", models.CharField(help_text="Log source", max_length=200)),
                ("timestamp", models.DateTimeField(db_index=True)),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("trace", "Trace"),
                            ("debug", "Debug"),
                            ("info", "Information"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("critical", "Critical"),
                        ],
                        max_length=10,
                    ),
                ),
                ("message", models.TextField()),
                (
                    "properties",
                    models.JSONField(
                        default=dict, help_text="Structured log properties"
                    ),
                ),
                (
                    "custom_dimensions",
                    models.JSONField(default=dict, help_text="Custom dimensions"),
                ),
                ("is_exception", models.BooleanField(default=False)),
                ("exception_type", models.CharField(blank=True, max_length=200)),
                ("stack_trace", models.TextField(blank=True)),
                (
                    "operation_id",
                    models.CharField(
                        blank=True, help_text="Operation correlation ID", max_length=100
                    ),
                ),
                ("session_id", models.CharField(blank=True, max_length=100)),
                ("user_id", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="azure.azureresource",
                    ),
                ),
            ],
            options={
                "verbose_name": "Azure Log",
                "verbose_name_plural": "Azure Logs",
                "db_table": "azure_logs",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="AzureAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("alert_id", models.CharField(max_length=200, unique=True)),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("metric", "Metric Alert"),
                            ("log", "Log Alert"),
                            ("activity", "Activity Alert"),
                            ("service_health", "Service Health"),
                        ],
                        max_length=20,
                    ),
                ),
                ("name", models.CharField(max_length=300)),
                ("description", models.TextField()),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("sev0", "Sev0 - Critical"),
                            ("sev1", "Sev1 - Error"),
                            ("sev2", "Sev2 - Warning"),
                            ("sev3", "Sev3 - Informational"),
                            ("sev4", "Sev4 - Verbose"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("resolved", "Resolved"),
                            ("suppressed", "Suppressed"),
                        ],
                        max_length=20,
                    ),
                ),
                ("fired_at", models.DateTimeField()),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "condition",
                    models.JSONField(default=dict, help_text="Alert condition details"),
                ),
                (
                    "context",
                    models.JSONField(
                        default=dict, help_text="Alert context and metadata"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "linked_jira_issue",
                    models.ForeignKey(
                        blank=True,
                        help_text="Linked JIRA issue",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="jira.jiraissue",
                    ),
                ),
                (
                    "configuration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="azure.azureconfiguration",
                    ),
                ),
                (
                    "resource",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="azure.azureresource",
                    ),
                ),
            ],
            options={
                "verbose_name": "Azure Alert",
                "verbose_name_plural": "Azure Alerts",
                "db_table": "azure_alerts",
                "ordering": ["-fired_at"],
            },
        ),
        migrations.CreateModel(
            name="AzureSyncLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sync_type",
                    models.CharField(
                        choices=[
                            ("full", "Full Sync"),
                            ("incremental", "Incremental Sync"),
                            ("metrics", "Metrics Only"),
                            ("logs", "Logs Only"),
                            ("alerts", "Alerts Only"),
                        ],
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("success", models.BooleanField(default=False)),
                ("resources_processed", models.PositiveIntegerField(default=0)),
                ("metrics_collected", models.PositiveIntegerField(default=0)),
                ("logs_collected", models.PositiveIntegerField(default=0)),
                ("alerts_processed", models.PositiveIntegerField(default=0)),
                (
                    "errors",
                    models.JSONField(
                        default=list, help_text="List of errors encountered"
                    ),
                ),
                (
                    "warnings",
                    models.JSONField(default=list, help_text="List of warnings"),
                ),
                ("duration_seconds", models.FloatField(blank=True, null=True)),
                ("api_calls_made", models.PositiveIntegerField(default=0)),
                (
                    "configuration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sync_logs",
                        to="azure.azureconfiguration",
                    ),
                ),
            ],
            options={
                "verbose_name": "Azure Sync Log",
                "verbose_name_plural": "Azure Sync Logs",
                "db_table": "azure_sync_logs",
                "ordering": ["-started_at"],
            },
        ),
        migrations.AddIndex(
            model_name="azureresource",
            index=models.Index(
                fields=["resource_type", "is_monitored"],
                name="azure_resou_resourc_b3cd03_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="azureresource",
            index=models.Index(
                fields=["resource_group"], name="azure_resou_resourc_d15395_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="azuremetric",
            index=models.Index(
                fields=["resource", "metric_name", "-timestamp"],
                name="azure_metri_resourc_b25c05_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="azuremetric",
            index=models.Index(
                fields=["metric_type", "-timestamp"],
                name="azure_metri_metric__053672_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="azuremetric",
            index=models.Index(
                fields=["severity", "-timestamp"], name="azure_metri_severit_2f8cc1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="azurelog",
            index=models.Index(
                fields=["resource", "-timestamp"], name="azure_logs_resourc_4afa1d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="azurelog",
            index=models.Index(
                fields=["level", "-timestamp"], name="azure_logs_level_e57305_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="azurelog",
            index=models.Index(
                fields=["is_exception", "-timestamp"],
                name="azure_logs_is_exce_998680_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="azurelog",
            index=models.Index(
                fields=["operation_id"], name="azure_logs_operati_9f7893_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="azurealert",
            index=models.Index(
                fields=["status", "-fired_at"], name="azure_alert_status_474394_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="azurealert",
            index=models.Index(
                fields=["severity", "-fired_at"], name="azure_alert_severit_00a49f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="azurealert",
            index=models.Index(
                fields=["alert_type", "-fired_at"],
                name="azure_alert_alert_t_75bd21_idx",
            ),
        ),
    ]
